{
  "version": 4,
  "terraform_version": "0.12.29",
  "serial": 210,
  "lineage": "872ad613-9855-ed6d-0916-7fc6d9efcfda",
  "outputs": {
    "kubeone_api": {
      "value": {
        "endpoint": "internal-testk8s-api-lb-1803137808.us-east-1.elb.amazonaws.com"
      },
      "type": [
        "object",
        {
          "endpoint": "string"
        }
      ]
    },
    "kubeone_hosts": {
      "value": {
        "control_plane": {
          "cloud_provider": "aws",
          "cluster_name": "testk8s",
          "hostnames": [
            "ip-10-50-1-60.ec2.internal",
            "ip-10-50-1-61.ec2.internal",
            "ip-10-50-1-62.ec2.internal"
          ],
          "private_address": [
            "10.50.1.60",
            "10.50.1.61",
            "10.50.1.62"
          ],
          "ssh_agent_socket": "env:SSH_AUTH_SOCK",
          "ssh_port": 22,
          "ssh_private_key_file": "/home/ubuntu/.ssh/id_rsa",
          "ssh_user": "core"
        }
      },
      "type": [
        "object",
        {
          "control_plane": [
            "object",
            {
              "cloud_provider": "string",
              "cluster_name": "string",
              "hostnames": [
                "tuple",
                [
                  "string",
                  "string",
                  "string"
                ]
              ],
              "private_address": [
                "tuple",
                [
                  "string",
                  "string",
                  "string"
                ]
              ],
              "ssh_agent_socket": "string",
              "ssh_port": "number",
              "ssh_private_key_file": "string",
              "ssh_user": "string"
            }
          ]
        }
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_ami",
      "name": "ami",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-0d28c278a4b1440a5",
                  "volume_size": "8",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "/dev/xvdb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              }
            ],
            "creation_date": "2020-08-19T14:54:52.000Z",
            "description": "Flatcar Container Linux stable 2512.3.0 (HVM)",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "Flatcar-stable-*-hvm"
                ]
              },
              {
                "name": "virtualization-type",
                "values": [
                  "hvm"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-099272f49841e5958",
            "image_id": "ami-099272f49841e5958",
            "image_location": "075585003325/Flatcar-stable-2512.3.0-hvm",
            "image_owner_alias": null,
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "Flatcar-stable-2512.3.0-hvm",
            "name_regex": null,
            "owner_id": "075585003325",
            "owners": [
              "075585003325"
            ],
            "platform": null,
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/xvda",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-0d28c278a4b1440a5",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "ct_config",
      "name": "node",
      "each": "list",
      "provider": "provider.ct",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ip-10-50-1-60.ec2.internal\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "id": "3284871542",
            "platform": "ec2",
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"2.3.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"path\":\"/etc/hostname\",\"contents\":{\"source\":\"data:,ip-10-50-1-60.ec2.internal\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/authorized_keys\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\",\"verification\":{}},\"mode\":360},{\"filesystem\":\"root\",\"path\":\"/opt/scripts/update-keys.sh\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/scripts/ca-update.sh\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/ca.crt\",\"contents\":{\"source\":\"http://10.50.7.144/k8s-iims/ca.crt\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/root/.docker/config.json\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/config.json\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Install]\\nWantedBy=multi-user.target\\n\\n[Unit]\\nDescription=Update ssh keys\\nAfter=network-online.target\\nWants=network-online.target\\n\\n[Service]\\nType=oneshot\\nExecStart=/opt/scripts/update-keys.sh\\n\",\"enabled\":true,\"name\":\"update-keys.service\"},{\"enabled\":true,\"name\":\"docker.service\"},{\"contents\":\"[Install]\\nWantedBy=multi-user.target\\n\\n[Unit]\\nDescription=Updae the CA certificate on host server\\nAfter=docker.service\\nWants=docker.service\\n\\n[Service]\\nType=oneshot\\nExecStart=/opt/scripts/ca-update.sh\\n\",\"enabled\":true,\"name\":\"ca-update.service\"}]}}",
            "snippets": null,
            "strict": true
          }
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "content": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ip-10-50-1-61.ec2.internal\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "id": "2379844765",
            "platform": "ec2",
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"2.3.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"path\":\"/etc/hostname\",\"contents\":{\"source\":\"data:,ip-10-50-1-61.ec2.internal\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/authorized_keys\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\",\"verification\":{}},\"mode\":360},{\"filesystem\":\"root\",\"path\":\"/opt/scripts/update-keys.sh\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/scripts/ca-update.sh\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/ca.crt\",\"contents\":{\"source\":\"http://10.50.7.144/k8s-iims/ca.crt\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/root/.docker/config.json\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/config.json\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Install]\\nWantedBy=multi-user.target\\n\\n[Unit]\\nDescription=Update ssh keys\\nAfter=network-online.target\\nWants=network-online.target\\n\\n[Service]\\nType=oneshot\\nExecStart=/opt/scripts/update-keys.sh\\n\",\"enabled\":true,\"name\":\"update-keys.service\"},{\"enabled\":true,\"name\":\"docker.service\"},{\"contents\":\"[Install]\\nWantedBy=multi-user.target\\n\\n[Unit]\\nDescription=Updae the CA certificate on host server\\nAfter=docker.service\\nWants=docker.service\\n\\n[Service]\\nType=oneshot\\nExecStart=/opt/scripts/ca-update.sh\\n\",\"enabled\":true,\"name\":\"ca-update.service\"}]}}",
            "snippets": null,
            "strict": true
          }
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "content": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ip-10-50-1-62.ec2.internal\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "id": "1609458336",
            "platform": "ec2",
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"2.3.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"path\":\"/etc/hostname\",\"contents\":{\"source\":\"data:,ip-10-50-1-62.ec2.internal\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/authorized_keys\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\",\"verification\":{}},\"mode\":360},{\"filesystem\":\"root\",\"path\":\"/opt/scripts/update-keys.sh\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/scripts/ca-update.sh\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/ca.crt\",\"contents\":{\"source\":\"http://10.50.7.144/k8s-iims/ca.crt\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/root/.docker/config.json\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/config.json\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Install]\\nWantedBy=multi-user.target\\n\\n[Unit]\\nDescription=Update ssh keys\\nAfter=network-online.target\\nWants=network-online.target\\n\\n[Service]\\nType=oneshot\\nExecStart=/opt/scripts/update-keys.sh\\n\",\"enabled\":true,\"name\":\"update-keys.service\"},{\"enabled\":true,\"name\":\"docker.service\"},{\"contents\":\"[Install]\\nWantedBy=multi-user.target\\n\\n[Unit]\\nDescription=Updae the CA certificate on host server\\nAfter=docker.service\\nWants=docker.service\\n\\n[Service]\\nType=oneshot\\nExecStart=/opt/scripts/ca-update.sh\\n\",\"enabled\":true,\"name\":\"ca-update.service\"}]}}",
            "snippets": null,
            "strict": true
          }
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "content": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ip-10-50-1-63.ec2.internal\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "id": "301778763",
            "platform": "ec2",
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"2.3.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"path\":\"/etc/hostname\",\"contents\":{\"source\":\"data:,ip-10-50-1-63.ec2.internal\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/authorized_keys\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\",\"verification\":{}},\"mode\":360},{\"filesystem\":\"root\",\"path\":\"/opt/scripts/update-keys.sh\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/scripts/ca-update.sh\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\",\"verification\":{}},\"mode\":511},{\"filesystem\":\"root\",\"path\":\"/opt/ca.crt\",\"contents\":{\"source\":\"http://10.50.7.144/k8s-iims/ca.crt\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"path\":\"/root/.docker/config.json\",\"contents\":{\"source\":\"http://10.50.7.144/iims-cluster-setup/k8s/config.json\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Install]\\nWantedBy=multi-user.target\\n\\n[Unit]\\nDescription=Update ssh keys\\nAfter=network-online.target\\nWants=network-online.target\\n\\n[Service]\\nType=oneshot\\nExecStart=/opt/scripts/update-keys.sh\\n\",\"enabled\":true,\"name\":\"update-keys.service\"},{\"enabled\":true,\"name\":\"docker.service\"},{\"contents\":\"[Install]\\nWantedBy=multi-user.target\\n\\n[Unit]\\nDescription=Updae the CA certificate on host server\\nAfter=docker.service\\nWants=docker.service\\n\\n[Service]\\nType=oneshot\\nExecStart=/opt/scripts/ca-update.sh\\n\",\"enabled\":true,\"name\":\"ca-update.service\"}]}}",
            "snippets": null,
            "strict": true
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "clc",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "9ecadd3758eb43ef606ba371b929825f7c8f6d1b999309142d94a5d2824528fb",
            "rendered": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ip-10-50-1-60.ec2.internal\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "template": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ${instance_hostname}\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "vars": {
              "instance_hostname": "ip-10-50-1-60.ec2.internal"
            }
          }
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "3be1fbe8e3911c3cca7a304a1fe42002a344d0265fc1fba7613360d00e1616ad",
            "rendered": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ip-10-50-1-61.ec2.internal\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "template": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ${instance_hostname}\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "vars": {
              "instance_hostname": "ip-10-50-1-61.ec2.internal"
            }
          }
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "e0526ef5550559137e556a9a681a2927959fd0ea13fecd3454ee51586c1d1c30",
            "rendered": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ip-10-50-1-62.ec2.internal\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "template": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ${instance_hostname}\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "vars": {
              "instance_hostname": "ip-10-50-1-62.ec2.internal"
            }
          }
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "27947d49ee9bcebdb741d02df1f802b4b09e3b601593eec2b6efe81d6fec9135",
            "rendered": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ip-10-50-1-63.ec2.internal\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "template": "---\nsystemd:\n  units:\n    - name: update-keys.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Update ssh keys\n        After=network-online.target\n        Wants=network-online.target\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/update-keys.sh\n    - name: docker.service\n      enabled: true\n    - name: ca-update.service\n      enabled: true\n      contents: |\n        [Install]\n        WantedBy=multi-user.target\n\n        [Unit]\n        Description=Updae the CA certificate on host server\n        After=docker.service\n        Wants=docker.service\n\n        [Service]\n        Type=oneshot\n        ExecStart=/opt/scripts/ca-update.sh\nstorage:\n  files:\n    - path: /etc/hostname\n      filesystem: root\n      mode: 0777\n      contents:\n        inline: ${instance_hostname}\n    - path: /opt/authorized_keys\n      filesystem: root\n      mode: 0550\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/authorized_keys\n    - path: /opt/scripts/update-keys.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/update-keys.sh\n    - path: /opt/scripts/ca-update.sh\n      filesystem: root\n      mode: 0777\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/ca-update-worker.sh\n    - path: /opt/ca.crt\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/k8s-iims/ca.crt\n    - path: /root/.docker/config.json\n      filesystem: root\n      mode: 0644\n      contents:\n        remote:\n          url: http://10.50.7.144/iims-cluster-setup/k8s/config.json",
            "vars": {
              "instance_hostname": "ip-10-50-1-63.ec2.internal"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_elb",
      "name": "control_plane",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_logs": [],
            "arn": "arn:aws:elasticloadbalancing:us-east-1:699470998130:loadbalancer/testk8s-api-lb",
            "availability_zones": [
              "us-east-1d"
            ],
            "connection_draining": false,
            "connection_draining_timeout": 300,
            "cross_zone_load_balancing": true,
            "dns_name": "internal-testk8s-api-lb-1803137808.us-east-1.elb.amazonaws.com",
            "health_check": [
              {
                "healthy_threshold": 2,
                "interval": 30,
                "target": "HTTPS:6443/healthz",
                "timeout": 3,
                "unhealthy_threshold": 2
              }
            ],
            "id": "testk8s-api-lb",
            "idle_timeout": 600,
            "instances": [
              "i-08cd60b8212a40721",
              "i-0d91312b82c750b3d",
              "i-0f3f3e084ae23e103"
            ],
            "internal": true,
            "listener": [
              {
                "instance_port": 6443,
                "instance_protocol": "tcp",
                "lb_port": 6443,
                "lb_protocol": "tcp",
                "ssl_certificate_id": ""
              }
            ],
            "name": "testk8s-api-lb",
            "name_prefix": null,
            "security_groups": [
              "sg-05e31a49d0e1d180f",
              "sg-06516065519bc993d"
            ],
            "source_security_group": "699470998130/testk8s-common",
            "source_security_group_id": "sg-05e31a49d0e1d180f",
            "subnets": [
              "subnet-23d1806a"
            ],
            "tags": {
              "Name": "TestK8s Cluster LB",
              "local.kube_cluster_tag": "shared"
            },
            "zone_id": "Z35SXDOTRQ7X7K"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_instance.control_plane",
            "aws_key_pair.deployer",
            "aws_security_group.common",
            "aws_security_group.elb",
            "aws_security_group.ssh"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "control_plane",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-099272f49841e5958",
            "arn": "arn:aws:ec2:us-east-1:699470998130:instance/i-08cd60b8212a40721",
            "associate_public_ip_address": false,
            "availability_zone": "us-east-1d",
            "cpu_core_count": 2,
            "cpu_threads_per_core": 2,
            "credit_specification": [],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "swarmProvisioning",
            "id": "i-08cd60b8212a40721",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "m5.xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "testk8s-deployer-key",
            "monitoring": false,
            "network_interface": [],
            "network_interface_id": null,
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-057b09f52bcf52821",
            "private_dns": "ip-10-50-1-60.ec2.internal",
            "private_ip": "10.50.1.60",
            "public_dns": "",
            "public_ip": "",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": false,
                "iops": 300,
                "kms_key_id": "",
                "volume_id": "vol-041e9bdcf9a0be66c",
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [],
            "source_dest_check": false,
            "subnet_id": "subnet-23d1806a",
            "tags": {
              "Container_Orchestrator": "Kubernetes",
              "Department": "Product Services",
              "East-1-Schedule": "DevSchedule",
              "Name": "TestK8s Cluster CP 1",
              "environment": "Test",
              "kubernetes.io/cluster/testk8s": "shared"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "863484df3f104335e46ebbcea6747177061a7c37",
            "user_data_base64": null,
            "volume_tags": {
              "Container_Orchestrator": "Kubernetes",
              "Department": "Product Services",
              "Name": "TestK8s Cluster CP 1",
              "environment": "Test"
            },
            "vpc_security_group_ids": [
              "sg-05e31a49d0e1d180f",
              "sg-08dccffb5335c6a02"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.deployer",
            "aws_security_group.common",
            "aws_security_group.ssh"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-099272f49841e5958",
            "arn": "arn:aws:ec2:us-east-1:699470998130:instance/i-0d91312b82c750b3d",
            "associate_public_ip_address": false,
            "availability_zone": "us-east-1d",
            "cpu_core_count": 2,
            "cpu_threads_per_core": 2,
            "credit_specification": [],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "swarmProvisioning",
            "id": "i-0d91312b82c750b3d",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "m5.xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "testk8s-deployer-key",
            "monitoring": false,
            "network_interface": [],
            "network_interface_id": null,
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-06952b77f9984ea59",
            "private_dns": "ip-10-50-1-61.ec2.internal",
            "private_ip": "10.50.1.61",
            "public_dns": "",
            "public_ip": "",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": false,
                "iops": 300,
                "kms_key_id": "",
                "volume_id": "vol-0876cbf2f47fd3600",
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [],
            "source_dest_check": false,
            "subnet_id": "subnet-23d1806a",
            "tags": {
              "Container_Orchestrator": "Kubernetes",
              "Department": "Product Services",
              "East-1-Schedule": "DevSchedule",
              "Name": "TestK8s Cluster CP 2",
              "environment": "Test",
              "kubernetes.io/cluster/testk8s": "shared"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "4c6508c35691cfd76ec665d8b54a6bfefd4e5348",
            "user_data_base64": null,
            "volume_tags": {
              "Container_Orchestrator": "Kubernetes",
              "Department": "Product Services",
              "Name": "TestK8s Cluster CP 2",
              "environment": "Test"
            },
            "vpc_security_group_ids": [
              "sg-05e31a49d0e1d180f",
              "sg-08dccffb5335c6a02"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.deployer",
            "aws_security_group.common",
            "aws_security_group.ssh"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-099272f49841e5958",
            "arn": "arn:aws:ec2:us-east-1:699470998130:instance/i-0f3f3e084ae23e103",
            "associate_public_ip_address": false,
            "availability_zone": "us-east-1d",
            "cpu_core_count": 2,
            "cpu_threads_per_core": 2,
            "credit_specification": [],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "swarmProvisioning",
            "id": "i-0f3f3e084ae23e103",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "m5.xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "testk8s-deployer-key",
            "monitoring": false,
            "network_interface": [],
            "network_interface_id": null,
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-03df8872c62583f01",
            "private_dns": "ip-10-50-1-62.ec2.internal",
            "private_ip": "10.50.1.62",
            "public_dns": "",
            "public_ip": "",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": false,
                "iops": 300,
                "kms_key_id": "",
                "volume_id": "vol-089fad17d347be087",
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [],
            "source_dest_check": false,
            "subnet_id": "subnet-23d1806a",
            "tags": {
              "Container_Orchestrator": "Kubernetes",
              "Department": "Product Services",
              "East-1-Schedule": "DevSchedule",
              "Name": "TestK8s Cluster CP 3",
              "environment": "Test",
              "kubernetes.io/cluster/testk8s": "shared"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "21284e6d7b70730c443b3476e8280039929483e7",
            "user_data_base64": null,
            "volume_tags": {
              "Container_Orchestrator": "Kubernetes",
              "Department": "Product Services",
              "Name": "TestK8s Cluster CP 3",
              "environment": "Test"
            },
            "vpc_security_group_ids": [
              "sg-05e31a49d0e1d180f",
              "sg-08dccffb5335c6a02"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.deployer",
            "aws_security_group.common",
            "aws_security_group.ssh"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "worker",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "ami": "ami-099272f49841e5958",
            "arn": "arn:aws:ec2:us-east-1:699470998130:instance/i-01c72a9967c80df58",
            "associate_public_ip_address": false,
            "availability_zone": "us-east-1d",
            "cpu_core_count": 2,
            "cpu_threads_per_core": 2,
            "credit_specification": [],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "swarmProvisioning",
            "id": "i-01c72a9967c80df58",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "m5.xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "testk8s-deployer-key",
            "monitoring": false,
            "network_interface": [],
            "network_interface_id": null,
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-056ec30e3980ec31b",
            "private_dns": "ip-10-50-1-63.ec2.internal",
            "private_ip": "10.50.1.63",
            "public_dns": "",
            "public_ip": "",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "encrypted": false,
                "iops": 300,
                "kms_key_id": "",
                "volume_id": "vol-0af3b5f4e23d823a4",
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [],
            "source_dest_check": false,
            "subnet_id": "subnet-23d1806a",
            "tags": {
              "Container_Orchestrator": "Kubernetes",
              "Department": "Product Services",
              "East-1-Schedule": "DevSchedule",
              "Name": "TestK8s Cluster Worker 1",
              "environment": "Test",
              "kubernetes.io/cluster/testk8s": "shared"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "8dc13e02310a9011f6bac520620d157d580831da",
            "user_data_base64": null,
            "volume_tags": {
              "Container_Orchestrator": "Kubernetes",
              "Department": "Product Services",
              "Name": "TestK8s Cluster Worker 1",
              "environment": "Test"
            },
            "vpc_security_group_ids": [
              "sg-05e31a49d0e1d180f",
              "sg-08dccffb5335c6a02"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_key_pair.deployer",
            "aws_security_group.common",
            "aws_security_group.ssh"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "deployer",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "fingerprint": "18:8c:e2:99:7f:00:71:8a:14:38:31:37:51:c8:ea:08",
            "id": "testk8s-deployer-key",
            "key_name": "testk8s-deployer-key",
            "key_name_prefix": null,
            "key_pair_id": "key-0ec98f5650c8cad9c",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCwN6StuvxTXbboNtTNFqpXkPS0BbifTj/pHVvuOvBUIemMGWN4wUoogyuAybTAOJU7oUy/5dIwfl7g0rR8XOQJuk1lWC/bMoKnb0xpx1LUqnAAZGsQXNr95+o7rqdpP7T0Kyi2Hi7PQGuCOU8bGuAPULMtMqAuM7226f201UbSuCiRgG5rpMaXEU7Vmf7+/oa8SkHsBD2raXjPj2TNkwkQO62G2b5Bw0a19iQq4A5WVdUvYpW9xcBI/U3rWeqzp8JVv/wF15uQQJDNSqXmSxy0jQNktWIoh5XbYVjh1Gzxj+d+1BrriSLfsaeCNUtEroKVVZvLYy7X+4uULiuE/AeJ ubuntu@ip-10-50-7-144",
            "tags": null
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "common",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:699470998130:security-group/sg-05e31a49d0e1d180f",
            "description": "cluster common rules",
            "egress": [],
            "id": "sg-05e31a49d0e1d180f",
            "ingress": [],
            "name": "testk8s-common",
            "name_prefix": null,
            "owner_id": "699470998130",
            "revoke_rules_on_delete": false,
            "tags": {
              "Cluster": "testk8s",
              "kubernetes.io/cluster/testk8s": "shared"
            },
            "timeouts": null,
            "vpc_id": "vpc-384def5e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "elb",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:699470998130:security-group/sg-06516065519bc993d",
            "description": "kube-api firewall",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "allow all outgoing traffic",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-06516065519bc993d",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "allow anyone to connect to tcp/6443",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 6443
              }
            ],
            "name": "testk8s-api-lb",
            "name_prefix": null,
            "owner_id": "699470998130",
            "revoke_rules_on_delete": false,
            "tags": {
              "Cluster": "testk8s"
            },
            "timeouts": null,
            "vpc_id": "vpc-384def5e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "ssh",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:699470998130:security-group/sg-08dccffb5335c6a02",
            "description": "ssh access",
            "egress": [],
            "id": "sg-08dccffb5335c6a02",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "allow incomming SSH",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              }
            ],
            "name": "testk8s-ssh",
            "name_prefix": null,
            "owner_id": "699470998130",
            "revoke_rules_on_delete": false,
            "tags": {
              "Cluster": "testk8s"
            },
            "timeouts": null,
            "vpc_id": "vpc-384def5e"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "egress_allow_all",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "allow all outgoing traffic",
            "from_port": 0,
            "id": "sgrule-3235120061",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-05e31a49d0e1d180f",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_security_group.common"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "http",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "open http",
            "from_port": 80,
            "id": "sgrule-3881970482",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-05e31a49d0e1d180f",
            "self": false,
            "source_security_group_id": null,
            "to_port": 80,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_security_group.common"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "https",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "open https",
            "from_port": 443,
            "id": "sgrule-3891210401",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-05e31a49d0e1d180f",
            "self": false,
            "source_security_group_id": null,
            "to_port": 443,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_security_group.common"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "ingress_self_allow_all",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "allow all incomming traffic from members of this group",
            "from_port": 0,
            "id": "sgrule-2295451533",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-05e31a49d0e1d180f",
            "self": true,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_security_group.common"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "nodeports",
      "each": "list",
      "provider": "provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "open nodeports",
            "from_port": 30000,
            "id": "sgrule-3105819034",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-05e31a49d0e1d180f",
            "self": false,
            "source_security_group_id": null,
            "to_port": 32767,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "aws_security_group.common"
          ]
        }
      ]
    }
  ]
}
